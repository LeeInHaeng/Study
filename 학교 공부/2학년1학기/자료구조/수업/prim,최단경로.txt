/* 본 프로그램은 최대 10개의 노드를 갖는 그래프의 Prim 알고리즘을 구현한 프로그램임 */
 
#include<stdio.h>

int a, b, u, v, n, i, j, ne = 1;

int visited[10] = { 0 }, min, mincost = 0, cost[10][10], distance[10] = {999};
/* visited는 노드가 선택되었는지를 확인하는 배열이고 cost가 가중치 그래프를 나타내는 배열임 */

void main()

{
	printf("\nEnter the number of nodes:");

	scanf("%d", &n);

	printf("\nEnter the adjacency matrix:\n");

	// 최단거리 알고리즘

	visited[1] = 1; // visited 초기셋팅
	distance[1] = 0; // distance 초기셋팅

	// cost 셋팅
	for(i=1; i<=n; i++)
		for(j=1; j<=n; j++)
		{
			scanf("%d",&cost[i][j]);
			if(cost[i][j]==0)
				cost[i][j] = 999;
		}

	// distance 초기셋팅 (1,1은 무조건 0이므로 2부터)
	for(i=2; i<=n; i++)
		distance[i] = cost[1][i];
	// printf("distance 셋팅끝");

	while(ne<n)
	{
		// 방문 안한 노드 중 최소 distance 구하기
		for(i=2, min=999; i<=n; i++)
		{
			if(visited[i]==0)
			{
				if(min > distance[i])
				{
					min = distance[i];
					a = i;
				}
			}
		}
		// 최소 distance 구하기 완료

		visited[a] = 1; // a 노드 방문 확정
		distance[a] = min; // a 노드까지 최단거리 확정
		ne++;

		// distance 다시셋팅
		for(i=2; i<=n; i++)
		{
			// 돌아오는 길이 원래 셋팅되었던 최단거리보다 작다면
			// distance를 돌아오는 길로 다시 셋팅
			if(distance[a]+cost[a][i] < distance[i])
				distance[i] = distance[a]+cost[a][i];
		}
	}

	for(i=1; i<=n; i++)
		printf("1부터 %d까지 최단 거리 : %d\n",i,distance[i]);
	

	/* 
	// prim 알고리즘
	// 노드 1부터 시작
	for (i = 1; i <= n; i++)

		for (j = 1; j <= n; j++)

		{

			scanf("%d", &cost[i][j]);

			if (cost[i][j] == 0)      // 링크가 없을 경우

				cost[i][j] = 999; //최소값 링크 선택을 위해 큰수 배정

		}

	visited[1] = 1;  // 루트를 1로 지정 또한 1은 트리에 선택되었음을 나타냄

	printf("\n");

	while (ne < n)  // ne는 트리에 선택된 링크 수를 나타내는 변수임 초기값은 1임

	{
		for (i = 1, min = 999; i <= n; i++) // 모든 노드 i 각각에 대해
		{


			for (j = 1; j <= n; j++)  // i 와 연결된 노드 모든 j에 대하여
			{

				if (cost[i][j] < min)
				{

					if (visited[i]==1)

					{

						min = cost[i][j];

						a = i;

						b = j;

					}
				}
			}
		}

		if (visited[a] == 0 || visited[b] == 0)

		{

			printf("\n Edge %d:(%d %d) cost:%d", ne++, a, b, min);

			mincost += min;

			visited[b] = 1;

		}

		cost[a][b] = cost[b][a] = 999;

	}

	printf("\n Minimun cost=%d\n", mincost);

	//getch();
	*/

}